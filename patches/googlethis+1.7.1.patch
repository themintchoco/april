diff --git a/node_modules/googlethis/lib/core/main.js b/node_modules/googlethis/lib/core/main.js
index 588a015..b448d1b 100644
--- a/node_modules/googlethis/lib/core/main.js
+++ b/node_modules/googlethis/lib/core/main.js
@@ -33,8 +33,9 @@ const FormData = require('form-data');
  * @param {boolean} [options.use_mobile_ua] - Weather or not to use a mobile user agent.
  * @param {object} [options.additional_params] - Additional parameters that will be passed to Google.
  * @param {Axios.AxiosRequestConfig} [options.axios_config] - Config that will be passed to Axios.
+ * @param {(url: string, config?: Axios.AxiosRequestConfig) => Promise<AxiosResponse<any>>} customFetcher - A custom fetcher in place of Axios.
  */
-async function search(query, options = {}) {
+async function search(query, options = {}, customFetcher = undefined) {
   let response;
 
   const ris = options.ris || false;
@@ -59,11 +60,19 @@ async function search(query, options = {}) {
         `${Constants.URLS.GOOGLE}search?q=${_query}&ie=UTF-8&aomd=1${(safe ? '&safe=active' : '')}&start=${page}`
     );
 
-    response = await Axios.get(url, {
-      params: additional_params,
-      headers: Utils.getHeaders({ mobile: use_mobile_ua }),
-      ...axios_config
-    }).catch((err) => err);
+    if (customFetcher) {
+      response = await customFetcher(url, {
+        params: additional_params,
+        headers: Utils.getHeaders({ mobile: use_mobile_ua }),
+        ...axios_config
+      }).catch((err) => err);
+    } else {
+      response = await Axios.get(url, {
+        params: additional_params,
+        headers: Utils.getHeaders({ mobile: use_mobile_ua }),
+        ...axios_config
+      }).catch((err) => err);
+    }
   }
 
   if (response instanceof Error)
diff --git a/node_modules/googlethis/typings/core/main.d.ts b/node_modules/googlethis/typings/core/main.d.ts
index 6598058..0618970 100644
--- a/node_modules/googlethis/typings/core/main.d.ts
+++ b/node_modules/googlethis/typings/core/main.d.ts
@@ -34,6 +34,7 @@ export function getTopNews(language?: string, region?: string): Promise<{
  * @param {boolean} [options.use_mobile_ua] - Weather or not to use a mobile user agent.
  * @param {object} [options.additional_params] - Additional parameters that will be passed to Google.
  * @param {Axios.AxiosRequestConfig} [options.axios_config] - Config that will be passed to Axios.
+ * @param {(url: string, config?: Axios.AxiosRequestConfig) => Promise<AxiosResponse<any>>} customFetcher - A custom fetcher in place of Axios.
  */
 export function search(query: string | object, options?: {
     ris?: boolean;
@@ -43,7 +44,7 @@ export function search(query: string | object, options?: {
     use_mobile_ua?: boolean;
     additional_params?: object;
     axios_config?: Axios.AxiosRequestConfig;
-}): Promise<{
+}, customFetcher?: (url: string, config?: Axios.AxiosRequestConfig) => Promise<AxiosResponse<any>>): Promise<{
     results: {
         title: string;
         description: string;
